{
  "address": "0xB41CA68b89b9A026b9112E791e4813706E9e0a7b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "providerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "providerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encApiKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encConnectionString",
          "type": "string"
        }
      ],
      "name": "AgreementActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "providerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "providerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encApiKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encConnectionString",
          "type": "string"
        }
      ],
      "name": "AgreementClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "providerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "providerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encApiKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encConnectionString",
          "type": "string"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encApiKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        }
      ],
      "name": "ProviderRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "WithdrawReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "WithdrawUserBalance",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToProvider",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "encApiKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "noOfDbAgreements",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "activeAgreements",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agreementIdToAgreement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "userBalance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "providerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "providerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "providerClaimed",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "encConnectionString",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startTimeStamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "providerRewardsWithdrawLastTimeStamp",
          "type": "uint256"
        },
        {
          "internalType": "enum DDMeshMarket.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "agreementIdTotalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "closeAgreementByProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "closeAgreementByUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_providerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "enterAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "getAgreement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "userBalance",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "providerAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "providerId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "providerClaimed",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "encConnectionString",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startTimeStamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "providerRewardsWithdrawLastTimeStamp",
              "type": "uint256"
            },
            {
              "internalType": "enum DDMeshMarket.AgreementStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct DDMeshMarket.Agreement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAgreements",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProviders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "encApiKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ensName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfDbAgreements",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "activeAgreements",
              "type": "uint256"
            }
          ],
          "internalType": "struct DDMeshMarket.Provider[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "getBalanceAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_providerAddress",
          "type": "address"
        }
      ],
      "name": "getProviderAgreements",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_providerAddress",
          "type": "address"
        }
      ],
      "name": "getProviderByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "encApiKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ensName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfDbAgreements",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "activeAgreements",
              "type": "uint256"
            }
          ],
          "internalType": "struct DDMeshMarket.Provider",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_providerId",
          "type": "uint256"
        }
      ],
      "name": "getProviderByProviderId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "encApiKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ensName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfDbAgreements",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "activeAgreements",
              "type": "uint256"
            }
          ],
          "internalType": "struct DDMeshMarket.Provider",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_providerId",
          "type": "uint256"
        }
      ],
      "name": "getProviderIdToAgreements",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProviderTVLs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "getRewardAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "userBalance",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "providerAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "providerId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "providerClaimed",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "encConnectionString",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startTimeStamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "providerRewardsWithdrawLastTimeStamp",
              "type": "uint256"
            },
            {
              "internalType": "enum DDMeshMarket.AgreementStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct DDMeshMarket.Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providerAgreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providerIdToAgreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providerIdToProvider",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "encApiKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "noOfDbAgreements",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "activeAgreements",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providerIdToTVLAcrossAllAgreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providerIdTotalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "providerToTVLAcrossAllAgreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "encApiKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "noOfDbAgreements",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "activeAgreements",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_enc_apiKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ensName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_noOfDbAgreements",
          "type": "uint256"
        }
      ],
      "name": "registerProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_encConnectionString",
          "type": "string"
        }
      ],
      "name": "setConnectionStringAndActivateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "topUpExistingAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userAgreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "withdrawReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x75daff88f3198f33ed14400a3fa2fbe338876487093145458dde455a7f87f89b",
  "receipt": {
    "to": null,
    "from": "0x1b6bB595fFD8a0dCDeac79f805d35c5101273F9a",
    "contractAddress": "0xB41CA68b89b9A026b9112E791e4813706E9e0a7b",
    "transactionIndex": 1,
    "gasUsed": "4125633",
    "logsBloom": "0x
    "blockHash": "0x88afc2a013e9142cf9cc2beaa2d8b62a482133fa4f59b9b1e46bb370c65d45fc",
    "transactionHash": "0x75daff88f3198f33ed14400a3fa2fbe338876487093145458dde455a7f87f89b",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 23978327,
        "transactionHash": "0x75daff88f3198f33ed14400a3fa2fbe338876487093145458dde455a7f87f89b",
        "address": "0xB41CA68b89b9A026b9112E791e4813706E9e0a7b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001b6bb595ffd8a0dcdeac79f805d35c5101273f9a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x88afc2a013e9142cf9cc2beaa2d8b62a482133fa4f59b9b1e46bb370c65d45fc"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 23978327,
        "transactionHash": "0x75daff88f3198f33ed14400a3fa2fbe338876487093145458dde455a7f87f89b",
        "address": "0xB41CA68b89b9A026b9112E791e4813706E9e0a7b",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001b6bb595ffd8a0dcdeac79f805d35c5101273f9a",
          "0x0000000000000000000000001b6bb595ffd8a0dcdeac79f805d35c5101273f9a"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x88afc2a013e9142cf9cc2beaa2d8b62a482133fa4f59b9b1e46bb370c65d45fc"
      }
    ],
    "blockNumber": 23978327,
    "cumulativeGasUsed": "4125633",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x15223Dee9891d84609889798bb63ADe5e1FDcB15"
  ],
  "numDeployments": 10,
  "solcInputHash": "08ed03440224cd78da9a91e5a1c38ca3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encConnectionString\",\"type\":\"string\"}],\"name\":\"AgreementActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encConnectionString\",\"type\":\"string\"}],\"name\":\"AgreementClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encConnectionString\",\"type\":\"string\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"}],\"name\":\"ProviderRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"WithdrawReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"WithdrawUserBalance\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToProvider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"noOfDbAgreements\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeAgreements\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agreementIdToAgreement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providerClaimed\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encConnectionString\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providerRewardsWithdrawLastTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"enum DDMeshMarket.AgreementStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agreementIdTotalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"closeAgreementByProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"closeAgreementByUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_providerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"getAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providerClaimed\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encConnectionString\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providerRewardsWithdrawLastTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"enum DDMeshMarket.AgreementStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct DDMeshMarket.Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAgreements\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProviders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"noOfDbAgreements\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeAgreements\",\"type\":\"uint256\"}],\"internalType\":\"struct DDMeshMarket.Provider[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"getBalanceAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_providerAddress\",\"type\":\"address\"}],\"name\":\"getProviderAgreements\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_providerAddress\",\"type\":\"address\"}],\"name\":\"getProviderByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"noOfDbAgreements\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeAgreements\",\"type\":\"uint256\"}],\"internalType\":\"struct DDMeshMarket.Provider\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_providerId\",\"type\":\"uint256\"}],\"name\":\"getProviderByProviderId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"noOfDbAgreements\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeAgreements\",\"type\":\"uint256\"}],\"internalType\":\"struct DDMeshMarket.Provider\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_providerId\",\"type\":\"uint256\"}],\"name\":\"getProviderIdToAgreements\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProviderTVLs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"getRewardAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providerClaimed\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encConnectionString\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providerRewardsWithdrawLastTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"enum DDMeshMarket.AgreementStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct DDMeshMarket.Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"providerAgreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"providerIdToAgreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"providerIdToProvider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"noOfDbAgreements\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeAgreements\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"providerIdToTVLAcrossAllAgreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerIdTotalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerToTVLAcrossAllAgreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"providers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"encApiKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"noOfDbAgreements\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeAgreements\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_enc_apiKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ensName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_noOfDbAgreements\",\"type\":\"uint256\"}],\"name\":\"registerProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_encConnectionString\",\"type\":\"string\"}],\"name\":\"setConnectionStringAndActivateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"topUpExistingAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAgreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DDMeshMarket.sol\":\"DDMeshMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/DDMeshMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\nimport \\\"./interface/IToken.sol\\\";\\n\\ncontract DDMeshMarket is AccessControl, Ownable {\\n    //ad0ll: Recommend we create modifiers for \\\"onlyProvider\\\" and \\\"onlyUser\\\"\\n    //ad0ll: We should consider making an agreement a contract instead instead of a struct. That way we could allow selfdestruct.\\n    event AgreementCreated(\\n        uint256 agreementId,\\n        address userAddress,\\n        address providerAddress,\\n        uint256 providerId,\\n        string encApiKey,\\n        string encConnectionString\\n    );\\n    event AgreementClosed(\\n        uint256 agreementId,\\n        address userAddress,\\n        address providerAddress,\\n        uint256 providerId,\\n        string encApiKey,\\n        string encConnectionString\\n    );\\n    event AgreementActivated(\\n        uint256 agreementId,\\n        address userAddress,\\n        address providerAddress,\\n        uint256 providerId,\\n        string encApiKey,\\n        string encConnectionString\\n    );\\n    event ProviderRegistered(uint256 id, address provider, uint256 fee, string encApiKey, string ensName);\\n    event WithdrawReward(uint256 agreementId, uint256 amount, address provider);\\n    event WithdrawUserBalance(uint256 agreementId, uint256 amount, address user);\\n\\n    IToken public token;\\n\\n    enum AgreementStatus {\\n        NONE,\\n        ENTERED,\\n        ACTIVE,\\n        CLOSED,\\n        REVOKED,\\n        ERROR\\n    }\\n\\n    struct Agreement {\\n        uint256 id;\\n        address user;\\n        uint256 userBalance;\\n        address providerAddress;\\n        uint256 providerId;\\n        uint256 providerClaimed;\\n        string encConnectionString;\\n        uint256 startTimeStamp;\\n        uint256 providerRewardsWithdrawLastTimeStamp;\\n        AgreementStatus status;\\n    }\\n\\n    struct Provider {\\n        uint256 id;\\n        address pAddress;\\n        uint256 fee; // DDM Tokens\\n        string encApiKey;\\n        string ensName;\\n        string description;\\n        uint256 noOfDbAgreements;\\n        uint256 activeAgreements;\\n    }\\n\\n    uint256 public agreementIdTotalCount;\\n    uint256 public providerIdTotalCount;\\n\\n    mapping(uint256 => Agreement) public agreementIdToAgreement; // mapping of agreement id to agreement\\n    mapping(uint256 => Provider) public providerIdToProvider; // mapping of provider id to provider\\n    mapping(address => Provider) public addressToProvider; // mapping of address to provider\\n    mapping(address => uint256[]) public userAgreements; // mapping of user to agreements\\n    mapping(address => uint256[]) public providerAgreements; // mapping of provider to agreements\\n    mapping(uint256 => uint256[]) public providerIdToAgreements; // mapping of provider id to agreements\\n    mapping(address => uint256) public providerToTVLAcrossAllAgreements; //Convenience mapping that shows how much value a provider is securing, used for leaderboard\\n    mapping(uint256 => uint256) public providerIdToTVLAcrossAllAgreements; //Convenience mapping that shows how much value a provider is securing, used for leaderboard\\n    uint256[] public agreements;\\n    Provider[] public providers;\\n\\n    constructor(address _tokenAddress) Ownable(msg.sender) {\\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\\n        token = IToken(_tokenAddress);\\n    }\\n\\n    function getAgreement(uint256 _agreementId) public view returns (Agreement memory) {\\n        return agreementIdToAgreement[_agreementId];\\n    }\\n\\n    function getProviderByProviderId(uint256 _providerId) public view returns (Provider memory) {\\n        return providerIdToProvider[_providerId];\\n    }\\n\\n    function getProviderByAddress(address _providerAddress) public view returns (Provider memory) {\\n        return addressToProvider[_providerAddress];\\n    }\\n\\n    function getUserAgreements(address _userAddress) public view returns (Agreement[] memory) {\\n        uint256[] memory userAgreementIds = userAgreements[_userAddress];\\n        Agreement[] memory userAgreementsArray = new Agreement[](userAgreementIds.length);\\n        for (uint256 i = 0; i < userAgreementIds.length; i++) {\\n            userAgreementsArray[i] = agreementIdToAgreement[userAgreementIds[i]];\\n        }\\n        return userAgreementsArray;\\n    }\\n\\n    function getProviderAgreements(address _providerAddress) public view returns (uint256[] memory) {\\n        return providerAgreements[_providerAddress];\\n    }\\n\\n    function getProviderIdToAgreements(uint256 _providerId) public view returns (uint256[] memory) {\\n        return providerIdToAgreements[_providerId];\\n    }\\n\\n    function getAllAgreements() public view returns (uint256[] memory) {\\n        return agreements;\\n    }\\n\\n    function getAllProviders() public view returns (Provider[] memory) {\\n        return providers;\\n    }\\n\\n    function getProviderTVLs() public view returns (uint256[] memory, address[] memory, uint256[] memory) {\\n        uint256[] memory providerIds = new uint256[](providers.length);\\n        address[] memory providerAddresses = new address[](providers.length);\\n        uint256[] memory providerTVLs = new uint256[](providers.length);\\n\\n        for (uint256 i = 0; i < providers.length; i++) {\\n            providerIds[i] = providers[i].id;\\n            providerAddresses[i] = providers[i].pAddress;\\n            providerTVLs[i] = providerIdToTVLAcrossAllAgreements[providers[i].id];\\n        }\\n        return (providerIds, providerAddresses, providerTVLs);\\n    }\\n\\n    function enterAgreement(uint256 _providerId, uint256 _amount) public {\\n        require(_amount > 0, \\\"amount must be greater than 0\\\");\\n        uint256 id = ++agreementIdTotalCount;\\n        Provider storage provider = providerIdToProvider[_providerId];\\n        require(provider.noOfDbAgreements > provider.activeAgreements, \\\"no of agreements exceeded\\\");\\n        token.transferFrom(msg.sender, address(this), _amount);\\n        Agreement memory agreement = Agreement(\\n            id,\\n            msg.sender,\\n            _amount,\\n            provider.pAddress,\\n            _providerId,\\n            0,\\n            \\\"\\\",\\n            block.timestamp,\\n            block.timestamp,\\n            AgreementStatus.ENTERED\\n        );\\n\\n        provider.activeAgreements += 1;\\n\\n        agreement.userBalance += _amount;\\n        agreementIdToAgreement[id] = agreement;\\n        agreements.push(id);\\n        userAgreements[msg.sender].push(id);\\n        providerAgreements[provider.pAddress].push(id);\\n        providerIdToAgreements[_providerId].push(id);\\n\\n        // Increase provider TVL by fee (we'll render it in months in the UI)\\n        providerToTVLAcrossAllAgreements[provider.pAddress] += provider.fee;\\n        providerIdToTVLAcrossAllAgreements[provider.id] += provider.fee;\\n        emit AgreementCreated(id, msg.sender, provider.pAddress, _providerId, provider.encApiKey, \\\"\\\");\\n    }\\n\\n    function setConnectionStringAndActivateAgreement(uint256 _agreementId, string memory _encConnectionString) public {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        require(agreement.id == _agreementId, \\\"agreement not found\\\");\\n        require(agreement.status == AgreementStatus.ENTERED, \\\"agreement already activated\\\");\\n        agreement.encConnectionString = _encConnectionString;\\n        agreement.status = AgreementStatus.ACTIVE;\\n        emit AgreementActivated(\\n            agreement.id,\\n            agreement.user,\\n            agreement.providerAddress,\\n            agreement.providerId,\\n            agreement.encConnectionString,\\n            _encConnectionString\\n        );\\n    }\\n\\n    function registerProvider(\\n        uint256 _fee,\\n        string memory _enc_apiKey,\\n        string memory _ensName,\\n        string memory _description,\\n        uint256 _noOfDbAgreements\\n    ) public {\\n        // Require description < 256 characters\\n        require(_fee > 0, \\\"fee must be greater than 0\\\");\\n        uint256 id = ++providerIdTotalCount;\\n        Provider memory _provider =\\n            Provider(id, msg.sender, _fee, _enc_apiKey, _ensName, _description, _noOfDbAgreements, 0);\\n        providerIdToProvider[id] = _provider;\\n        providers.push(_provider);\\n        emit ProviderRegistered(id, msg.sender, _fee, _enc_apiKey, _ensName);\\n    }\\n\\n    function getRewardAvailable(uint256 _agreementId) public view returns (uint256) {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        Provider storage provider = providerIdToProvider[agreement.providerId];\\n        uint256 rewardAmount = (block.timestamp - agreement.providerRewardsWithdrawLastTimeStamp) * provider.fee;\\n        return rewardAmount;\\n    }\\n\\n    function getBalanceAvailable(uint256 _agreementId) public view returns (uint256) {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        Provider storage provider = providerIdToProvider[agreement.providerId];\\n        uint256 rewardAmount = (block.timestamp - agreement.startTimeStamp) * provider.fee;\\n        uint256 balance = agreement.userBalance - rewardAmount;\\n        return balance;\\n    }\\n\\n    // Provider can withdraw fee from user.\\n    function withdrawReward(uint256 _agreementId) public {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        require(agreement.providerAddress == msg.sender, \\\"provider not found\\\");\\n        uint256 rewardAmount = (agreement.providerRewardsWithdrawLastTimeStamp - block.timestamp)\\n            * providerIdToProvider[agreement.providerId].fee;\\n        // require(agreement.userBalance >= rewardAmount, \\\"Insufficient User balance\\\");\\n\\n        if (agreement.userBalance < rewardAmount) {\\n            rewardAmount = agreement.userBalance;\\n            closeAgreementByProvider(_agreementId);\\n        }\\n\\n        agreement.providerRewardsWithdrawLastTimeStamp = block.timestamp;\\n        agreement.userBalance -= rewardAmount;\\n        agreement.providerClaimed += rewardAmount;\\n        token.transfer(msg.sender, rewardAmount);\\n\\n        emit WithdrawReward(_agreementId, rewardAmount, msg.sender);\\n    }\\n\\n    function withdrawBalanceUser(uint256 _amount, uint256 _agreementId) internal {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        require(agreement.user == msg.sender, \\\"not your agreement\\\");\\n        require(agreement.userBalance >= _amount, \\\"insufficient balance\\\");\\n\\n        agreement.userBalance -= _amount;\\n        token.transfer(msg.sender, _amount);\\n        emit WithdrawUserBalance(_agreementId, _amount, msg.sender);\\n    }\\n\\n    function closeAgreementByUser(uint256 _agreementId) public {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        Provider storage provider = providerIdToProvider[agreement.providerId];\\n        require(agreement.user == msg.sender, \\\"not your agreement\\\");\\n        require(agreement.status == AgreementStatus.ACTIVE, \\\"agreement is not active\\\");\\n        agreement.status = AgreementStatus.CLOSED;\\n        withdrawBalanceUser(agreement.userBalance, agreement.id);\\n\\n        // Decrease provider TVL by fee (we'll render it in months in the UI)\\n        providerToTVLAcrossAllAgreements[provider.pAddress] -= provider.fee;\\n        providerIdToTVLAcrossAllAgreements[provider.id] -= provider.fee;\\n        emit AgreementClosed(\\n            _agreementId,\\n            agreement.user,\\n            agreement.providerAddress,\\n            provider.id,\\n            provider.encApiKey,\\n            agreement.encConnectionString\\n        );\\n    }\\n\\n    function topUpExistingAgreement(uint256 _agreementId, uint256 _amount) public {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        require(agreement.user == msg.sender, \\\"not your agreement\\\");\\n        require(agreement.status == AgreementStatus.ACTIVE, \\\"agreement is not active\\\");\\n        token.transferFrom(msg.sender, address(this), _amount);\\n        agreement.userBalance += _amount;\\n    }\\n\\n    function closeAgreementByProvider(uint256 _agreementId) public {\\n        Agreement storage agreement = agreementIdToAgreement[_agreementId];\\n        Provider memory provider = providerIdToProvider[agreement.providerId];\\n        require(agreement.userBalance == 0, \\\"User balance is not 0\\\");\\n        require(agreement.providerAddress == msg.sender, \\\"not your agreement, you are not the provider\\\");\\n        require(agreement.status == AgreementStatus.ACTIVE, \\\"agreement is not active\\\");\\n        agreement.status = AgreementStatus.CLOSED;\\n        withdrawReward(agreement.id);\\n        // Decrease provider TVL by fee (we'll render it in months in the UI)\\n        providerToTVLAcrossAllAgreements[provider.pAddress] -= provider.fee;\\n        providerIdToTVLAcrossAllAgreements[provider.id] -= provider.fee;\\n        emit AgreementClosed(\\n            _agreementId,\\n            agreement.user,\\n            agreement.providerAddress,\\n            provider.id,\\n            provider.encApiKey,\\n            agreement.encConnectionString\\n        );\\n    }\\n}\\n\\n// close the agreement.\\n//Todo:\\n// Provider can close only hen not enough funds\\n// Calculation of how much time is passed and how much of the userbalance can be claimed by the provider.\\n\",\"keccak256\":\"0xeec51fbd69d6af502011714d51f75e3ced75bb92b2f6ad181f158d34a02c4e47\",\"license\":\"MIT\"},\"contracts/interface/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.22;\\n\\ninterface IToken {\\n  function mint(address to, uint256 amount) external;\\n\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function balanceOf(address account) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x7cc3fc2cc220c55805b9fae2d917c7f0a3d43dffc5c8ef4efdefbc901a8015e5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620038283803806200382883398101604081905262000034916200019c565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000066816200009b565b5062000074600033620000ed565b50600280546001600160a01b0319166001600160a01b0392909216919091179055620001ce565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff1662000192576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620001493390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600162000196565b5060005b92915050565b600060208284031215620001af57600080fd5b81516001600160a01b0381168114620001c757600080fd5b9392505050565b61364a80620001de6000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c8063715018a611610146578063adb9cae6116100c3578063e845bdae11610087578063e845bdae1461057e578063ece495ec14610591578063f0e0e1321461059a578063f2fde38b146105ba578063fc0c546a146105cd578063fdf73bd6146105e057600080fd5b8063adb9cae61461051c578063bd14de961461053c578063c5262c931461054f578063d547741f14610558578063d5b548f51461056b57600080fd5b80639c1a04821161010a5780639c1a0482146104c45780639e68377c146104d75780639f224987146104ea578063a217fddf146104fd578063a9f8d60d1461050557600080fd5b8063715018a614610448578063864739e3146104505780638da5cb5b1461047957806391d148541461049e57806393202d07146104b157600080fd5b806336568abe116101d45780634e6873c7116101985780634e6873c7146103e75780634f9f6fe6146103ef57806350f3fc811461040f578063523a3f0814610422578063593be20d1461043557600080fd5b806336568abe1461038657806337c23b171461039957806338808aaf146103ac5780633bb4497c146103bf5780634c27984e146103d457600080fd5b80632335bde01161021b5780632335bde0146102fb578063237a39f91461031b578063248a9ca31461033b5780632f2ff15d1461035e5780633500a9531461037357600080fd5b8063013f478f1461025857806301ffc9a71461028b57806310991547146102ae578063144161e5146102c15780631d824046146102e8575b600080fd5b610278610266366004612b31565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b61029e610299366004612b53565b6105f3565b6040519015158152602001610282565b6102786102bc366004612b7d565b61062a565b6102d46102cf366004612b31565b610688565b604051610282989796959493929190612bdc565b6102786102f6366004612c4e565b61086d565b61030e610309366004612b31565b61089e565b6040516102829190612d01565b61032e610329366004612b31565b610ac1565b6040516102829190612d50565b610278610349366004612b7d565b60009081526020819052604090206001015490565b61037161036c366004612d63565b610b2d565b005b610278610381366004612d8f565b610b58565b610371610394366004612d63565b610b74565b6102786103a7366004612b7d565b610bac565b6103716103ba366004612e5c565b610bf5565b6103c7610d38565b6040516102829190612ea3565b6102786103e2366004612d8f565b610f8d565b61032e610fa9565b6104026103fd366004612b7d565b611001565b6040516102829190612fe9565b6102d461041d366004612b7d565b61114e565b610371610430366004612b7d565b61119d565b6102d4610443366004612b7d565b61133d565b610371611377565b61046361045e366004612b7d565b61138b565b6040516102829a99989796959493929190612ffc565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610282565b61029e6104ac366004612d63565b611477565b6103716104bf366004612b7d565b6114a0565b61032e6104d2366004612b7d565b6115f8565b61030e6104e5366004612b7d565b611658565b6103716104f8366004612c4e565b6116b8565b610278600081565b61050d6117c4565b60405161028293929190613071565b61052f61052a366004612b31565b6119cf565b60405161028291906130e4565b61027861054a366004612b7d565b611c2b565b61027860035481565b610371610566366004612d63565b611c4c565b610371610579366004612c4e565b611c71565b61037161058c36600461313b565b612065565b61027860045481565b6102786105a8366004612b7d565b600c6020526000908152604090205481565b6103716105c8366004612b31565b612308565b600254610486906001600160a01b031681565b6103716105ee366004612b7d565b612346565b60006001600160e01b03198216637965db0b60e01b148061062457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600081815260056020908152604080832060048101548452600690925282206002810154600783015484919061066090426131eb565b61066a91906131fe565b9050600081846002015461067e91906131eb565b9695505050505050565b600760205260009081526040902080546001820154600283015460038401805493946001600160a01b03909316939192916106c290613215565b80601f01602080910402602001604051908101604052809291908181526020018280546106ee90613215565b801561073b5780601f106107105761010080835404028352916020019161073b565b820191906000526020600020905b81548152906001019060200180831161071e57829003601f168201915b50505050509080600401805461075090613215565b80601f016020809104026020016040519081016040528092919081815260200182805461077c90613215565b80156107c95780601f1061079e576101008083540402835291602001916107c9565b820191906000526020600020905b8154815290600101906020018083116107ac57829003601f168201915b5050505050908060050180546107de90613215565b80601f016020809104026020016040519081016040528092919081815260200182805461080a90613215565b80156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b5050505050908060060154908060070154905088565b600a602052816000526040600020818154811061088957600080fd5b90600052602060002001600091509150505481565b6108a6612a52565b6001600160a01b038083166000908152600760209081526040918290208251610100810184528154815260018201549094169184019190915260028101549183019190915260038101805460608401919061090090613215565b80601f016020809104026020016040519081016040528092919081815260200182805461092c90613215565b80156109795780601f1061094e57610100808354040283529160200191610979565b820191906000526020600020905b81548152906001019060200180831161095c57829003601f168201915b5050505050815260200160048201805461099290613215565b80601f01602080910402602001604051908101604052809291908181526020018280546109be90613215565b8015610a0b5780601f106109e057610100808354040283529160200191610a0b565b820191906000526020600020905b8154815290600101906020018083116109ee57829003601f168201915b50505050508152602001600582018054610a2490613215565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5090613215565b8015610a9d5780601f10610a7257610100808354040283529160200191610a9d565b820191906000526020600020905b815481529060010190602001808311610a8057829003601f168201915b50505050508152602001600682015481526020016007820154815250509050919050565b6001600160a01b038116600090815260096020908152604091829020805483518184028101840190945280845260609392830182828015610b2157602002820191906000526020600020905b815481526020019060010190808311610b0d575b50505050509050919050565b600082815260208190526040902060010154610b488161273b565b610b528383612745565b50505050565b6009602052816000526040600020818154811061088957600080fd5b6001600160a01b0381163314610b9d5760405163334bd91960e11b815260040160405180910390fd5b610ba782826127d7565b505050565b6000818152600560209081526040808320600481015484526006909252822060028101546008830154849190610be290426131eb565b610bec91906131fe565b95945050505050565b600082815260056020526040902080548314610c4e5760405162461bcd60e51b81526020600482015260136024820152721859dc99595b595b9d081b9bdd08199bdd5b99606a1b60448201526064015b60405180910390fd5b6001600982015460ff166005811115610c6957610c69612f07565b14610cb65760405162461bcd60e51b815260206004820152601b60248201527f61677265656d656e7420616c72656164792061637469766174656400000000006044820152606401610c45565b60068101610cc4838261329f565b5060098101805460ff1916600217905580546001820154600383015460048401546040517f378a301fbbc85083e6935c8c543eceb5080659f50d3ac2cf482f4015b69de0a994610d2b9490936001600160a01b0391821693911691600688019089906133dc565b60405180910390a1505050565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015610f845760008481526020908190206040805161010081018252600886029092018054835260018101546001600160a01b031693830193909352600283015490820152600382018054919291606084019190610dbb90613215565b80601f0160208091040260200160405190810160405280929190818152602001828054610de790613215565b8015610e345780601f10610e0957610100808354040283529160200191610e34565b820191906000526020600020905b815481529060010190602001808311610e1757829003601f168201915b50505050508152602001600482018054610e4d90613215565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7990613215565b8015610ec65780601f10610e9b57610100808354040283529160200191610ec6565b820191906000526020600020905b815481529060010190602001808311610ea957829003601f168201915b50505050508152602001600582018054610edf90613215565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0b90613215565b8015610f585780601f10610f2d57610100808354040283529160200191610f58565b820191906000526020600020905b815481529060010190602001808311610f3b57829003601f168201915b505050505081526020016006820154815260200160078201548152505081526020019060010190610d5c565b50505050905090565b6008602052816000526040600020818154811061088957600080fd5b6060600d805480602002602001604051908101604052809291908181526020018280548015610ff757602002820191906000526020600020905b815481526020019060010190808311610fe3575b5050505050905090565b611009612aa0565b6000828152600560208181526040928390208351610140810185528154815260018201546001600160a01b039081169382019390935260028201549481019490945260038101549091166060840152600481015460808401529081015460a083015260068101805460c08401919061108090613215565b80601f01602080910402602001604051908101604052809291908181526020018280546110ac90613215565b80156110f95780601f106110ce576101008083540402835291602001916110f9565b820191906000526020600020905b8154815290600101906020018083116110dc57829003601f168201915b50505091835250506007820154602082015260088201546040820152600982015460609091019060ff16600581111561113457611134612f07565b600581111561114557611145612f07565b90525092915050565b600e818154811061115e57600080fd5b600091825260209091206008909102018054600182015460028301546003840180549395506001600160a01b039092169390929091906106c290613215565b600081815260056020526040902060038101546001600160a01b031633146111fc5760405162461bcd60e51b81526020600482015260126024820152711c1c9bdd9a59195c881b9bdd08199bdd5b9960721b6044820152606401610c45565b600481015460009081526006602052604081206002015460088301546112239042906131eb565b61122d91906131fe565b9050808260020154101561124a5750600281015461124a83612346565b4282600801819055508082600201600082825461126791906131eb565b92505081905550808260050160008282546112829190613434565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156112d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fc9190613447565b50604080518481526020810183905233918101919091527fd87151350e1bbb72f18f34be4129fa56a2aa6bb7f9d1bbf1a48defa0e67ebd6190606001610d2b565b600660205260009081526040902080546001820154600283015460038401805493946001600160a01b03909316939192916106c290613215565b61137f612842565b611389600061286f565b565b6005602081905260009182526040909120805460018201546002830154600384015460048501549585015460068601805495976001600160a01b0395861697949693909516949391926113dd90613215565b80601f016020809104026020016040519081016040528092919081815260200182805461140990613215565b80156114565780601f1061142b57610100808354040283529160200191611456565b820191906000526020600020905b81548152906001019060200180831161143957829003601f168201915b50505050600783015460088401546009909401549293909290915060ff168a565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081815260056020908152604080832060048101548452600690925290912060018201546001600160a01b031633146114ec5760405162461bcd60e51b8152600401610c4590613469565b6002600983015460ff16600581111561150757611507612f07565b146115245760405162461bcd60e51b8152600401610c4590613495565b60098201805460ff191660031790556002820154825461154491906128c1565b600281015460018201546001600160a01b03166000908152600b6020526040812080549091906115759084906131eb565b9091555050600281015481546000908152600c60205260408120805490919061159f9084906131eb565b9091555050600182015460038084015483546040517ed7ba45d1728c90fbe80acee8d98233c67e315bb7c2324521d3cacd92da943a94610d2b9489946001600160a01b03928316949216929088019060068a01906134cc565b6000818152600a6020908152604091829020805483518184028101840190945280845260609392830182828015610b215760200282019190600052602060002090815481526020019060010190808311610b0d5750505050509050919050565b611660612a52565b6000828152600660209081526040918290208251610100810184528154815260018201546001600160a01b03169281019290925260028101549282019290925260038201805491929160608401919061090090613215565b600082815260056020526040902060018101546001600160a01b031633146116f25760405162461bcd60e51b8152600401610c4590613469565b6002600982015460ff16600581111561170d5761170d612f07565b1461172a5760405162461bcd60e51b8152600401610c4590613495565b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a59190613447565b50818160020160008282546117ba9190613434565b9091555050505050565b60608060606000600e8054905067ffffffffffffffff8111156117e9576117e9612db9565b604051908082528060200260200182016040528015611812578160200160208202803683370190505b50600e5490915060009067ffffffffffffffff81111561183457611834612db9565b60405190808252806020026020018201604052801561185d578160200160208202803683370190505b50600e5490915060009067ffffffffffffffff81111561187f5761187f612db9565b6040519080825280602002602001820160405280156118a8578160200160208202803683370190505b50905060005b600e548110156119c257600e81815481106118cb576118cb613517565b9060005260206000209060080201600001548482815181106118ef576118ef613517565b602002602001018181525050600e818154811061190e5761190e613517565b906000526020600020906008020160010160009054906101000a90046001600160a01b031683828151811061194557611945613517565b60200260200101906001600160a01b031690816001600160a01b031681525050600c6000600e838154811061197c5761197c613517565b9060005260206000209060080201600001548152602001908152602001600020548282815181106119af576119af613517565b60209081029190910101526001016118ae565b5091959094509092509050565b6001600160a01b0381166000908152600860209081526040808320805482518185028101850190935280835260609493830182828015611a2e57602002820191906000526020600020905b815481526020019060010190808311611a1a575b505050505090506000815167ffffffffffffffff811115611a5157611a51612db9565b604051908082528060200260200182016040528015611a8a57816020015b611a77612aa0565b815260200190600190039081611a6f5790505b50905060005b8251811015611c235760056000848381518110611aaf57611aaf613517565b60209081029190910181015182528181019290925260409081016000208151610140810183528154815260018201546001600160a01b03908116948201949094526002820154928101929092526003810154909216606082015260048201546080820152600582015460a082015260068201805491929160c084019190611b3590613215565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6190613215565b8015611bae5780601f10611b8357610100808354040283529160200191611bae565b820191906000526020600020905b815481529060010190602001808311611b9157829003601f168201915b50505091835250506007820154602082015260088201546040820152600982015460609091019060ff166005811115611be957611be9612f07565b6005811115611bfa57611bfa612f07565b81525050828281518110611c1057611c10613517565b6020908102919091010152600101611a90565b509392505050565b600d8181548110611c3b57600080fd5b600091825260209091200154905081565b600082815260208190526040902060010154611c678161273b565b610b5283836127d7565b60008111611cc15760405162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610c45565b6000600360008154611cd29061352d565b918290555060008481526006602081905260409091206007810154918101549293509111611d425760405162461bcd60e51b815260206004820152601960248201527f6e6f206f662061677265656d656e7473206578636565646564000000000000006044820152606401610c45565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbd9190613447565b506040805161014081018252838152336020808301919091528183018690526001808501546001600160a01b0316606084015260808301889052600060a08401819052845192830190945283825260c08301919091524260e0830181905261010083015261012082019081525090506001826007016000828254611e419190613434565b925050819055508381604001818151611e5a9190613434565b90525060008381526005602081815260409283902084518155908401516001820180546001600160a01b03199081166001600160a01b039384161790915593850151600283015560608501516003830180549095169116179092556080830151600483015560a08301519082015560c08201518291906006820190611edf908261329f565b5060e08201516007820155610100820151600882015561012082015160098201805460ff19166001836005811115611f1957611f19612f07565b021790555050600d805460018181019092557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501859055336000908152600860209081526040808320805480860182559084528284200188905586840180546001600160a01b0390811685526009845282852080548088018255908652848620018a90558b8552600a8452828520805496870181558552838520909501899055600288015490549094168352600b9091528120805492935091611fdd908490613434565b9091555050600282015482546000908152600c602052604081208054909190612007908490613434565b909155505060018201546040517f8159ca23ddfb64a3383082fa3d8bfe372e5cf4e0235f04b5eb4eec8ac690237f9161205691869133916001600160a01b03909116908a906003890190613546565b60405180910390a15050505050565b600085116120b55760405162461bcd60e51b815260206004820152601a60248201527f666565206d7573742062652067726561746572207468616e20300000000000006044820152606401610c45565b60006004600081546120c69061352d565b918290555060408051610100810182528281523360208083019182528284018b8152606084018b8152608085018b905260a085018a905260c08501899052600060e086018190528781526006909352949091208351815591516001830180546001600160a01b0319166001600160a01b03909216919091179055516002820155915192935091829190600382019061215e908261329f565b5060808201516004820190612173908261329f565b5060a08201516005820190612188908261329f565b5060c0820151600682015560e090910151600790910155600e805460018101825560009190915281517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd600890920291820190815560208301517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fe830180546001600160a01b0319166001600160a01b0390921691909117905560408301517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3ff830155606083015183927fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c400019061227f908261329f565b5060808201516004820190612294908261329f565b5060a082015160058201906122a9908261329f565b5060c0820151816006015560e0820151816007015550507f40ebfac2153d289b4b4b35149bc5c041508301d9a9a1f898c625f52ae2041d9982338989896040516122f795949392919061359c565b60405180910390a150505050505050565b612310612842565b6001600160a01b03811661233a57604051631e4fbdf760e01b815260006004820152602401610c45565b6123438161286f565b50565b600081815260056020908152604080832060048101548452600683528184208251610100810184528154815260018201546001600160a01b03169481019490945260028101549284019290925260038201805491949392916060840191906123ad90613215565b80601f01602080910402602001604051908101604052809291908181526020018280546123d990613215565b80156124265780601f106123fb57610100808354040283529160200191612426565b820191906000526020600020905b81548152906001019060200180831161240957829003601f168201915b5050505050815260200160048201805461243f90613215565b80601f016020809104026020016040519081016040528092919081815260200182805461246b90613215565b80156124b85780601f1061248d576101008083540402835291602001916124b8565b820191906000526020600020905b81548152906001019060200180831161249b57829003601f168201915b505050505081526020016005820180546124d190613215565b80601f01602080910402602001604051908101604052809291908181526020018280546124fd90613215565b801561254a5780601f1061251f5761010080835404028352916020019161254a565b820191906000526020600020905b81548152906001019060200180831161252d57829003601f168201915b5050505050815260200160068201548152602001600782015481525050905081600201546000146125b55760405162461bcd60e51b81526020600482015260156024820152740557365722062616c616e6365206973206e6f74203605c1b6044820152606401610c45565b60038201546001600160a01b031633146126265760405162461bcd60e51b815260206004820152602c60248201527f6e6f7420796f75722061677265656d656e742c20796f7520617265206e6f742060448201526b3a343290383937bb34b232b960a11b6064820152608401610c45565b6002600983015460ff16600581111561264157612641612f07565b1461265e5760405162461bcd60e51b8152600401610c4590613495565b60098201805460ff1916600317905581546126789061119d565b8060400151600b600083602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546126b591906131eb565b909155505060408082015182516000908152600c6020529182208054919290916126e09084906131eb565b909155505060018201546003830154825160608401516040517ed7ba45d1728c90fbe80acee8d98233c67e315bb7c2324521d3cacd92da943a94610d2b9489946001600160a01b0392831694919092169260068a01906135db565b6123438133612a15565b60006127518383611477565b6127cf576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556127873390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610624565b506000610624565b60006127e38383611477565b156127cf576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610624565b6001546001600160a01b031633146113895760405163118cdaa760e01b8152336004820152602401610c45565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081815260056020526040902060018101546001600160a01b031633146128fb5760405162461bcd60e51b8152600401610c4590613469565b82816002015410156129465760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610c45565b8281600201600082825461295a91906131eb565b909155505060025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156129b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d49190613447565b50604080518381526020810185905233918101919091527f40e4573562e6371894d454760624092834d732fa3c863d0bcda4ae9d64c9a66d90606001610d2b565b612a1f8282611477565b612a4e5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610c45565b5050565b6040518061010001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160008152602001600081525090565b6040518061014001604052806000815260200160006001600160a01b031681526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160608152602001600081526020016000815260200160006005811115612b1057612b10612f07565b905290565b80356001600160a01b0381168114612b2c57600080fd5b919050565b600060208284031215612b4357600080fd5b612b4c82612b15565b9392505050565b600060208284031215612b6557600080fd5b81356001600160e01b031981168114612b4c57600080fd5b600060208284031215612b8f57600080fd5b5035919050565b6000815180845260005b81811015612bbc57602081850181015186830182015201612ba0565b506000602082860101526020601f19601f83011685010191505092915050565b8881526001600160a01b03881660208201526040810187905261010060608201819052600090612c0e83820189612b96565b90508281036080840152612c228188612b96565b905082810360a0840152612c368187612b96565b60c0840195909552505060e001529695505050505050565b60008060408385031215612c6157600080fd5b50508035926020909101359150565b60006101008251845260018060a01b036020840151166020850152604083015160408501526060830151816060860152612cac82860182612b96565b91505060808301518482036080860152612cc68282612b96565b91505060a083015184820360a0860152612ce08282612b96565b91505060c083015160c085015260e083015160e08501528091505092915050565b602081526000612b4c6020830184612c70565b60008151808452602080850194506020840160005b83811015612d4557815187529582019590820190600101612d29565b509495945050505050565b602081526000612b4c6020830184612d14565b60008060408385031215612d7657600080fd5b82359150612d8660208401612b15565b90509250929050565b60008060408385031215612da257600080fd5b612dab83612b15565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612de057600080fd5b813567ffffffffffffffff80821115612dfb57612dfb612db9565b604051601f8301601f19908116603f01168101908282118183101715612e2357612e23612db9565b81604052838152866020858801011115612e3c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215612e6f57600080fd5b82359150602083013567ffffffffffffffff811115612e8d57600080fd5b612e9985828601612dcf565b9150509250929050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015612efa57603f19888603018452612ee8858351612c70565b94509285019290850190600101612ecc565b5092979650505050505050565b634e487b7160e01b600052602160045260246000fd5b60068110612f3b57634e487b7160e01b600052602160045260246000fd5b9052565b6000610140825184526020830151612f6260208601826001600160a01b03169052565b50604083015160408501526060830151612f8760608601826001600160a01b03169052565b506080830151608085015260a083015160a085015260c08301518160c0860152612fb382860182612b96565b91505060e083015160e085015261010080840151818601525061012080840151612fdf82870182612f1d565b5090949350505050565b602081526000612b4c6020830184612f3f565b8a81526001600160a01b038a81166020830152604082018a9052881660608201526080810187905260a0810186905261014060c0820181905260009061304483820188612b96565b9150508460e083015283610100830152613062610120830184612f1d565b9b9a5050505050505050505050565b6060815260006130846060830186612d14565b82810360208481019190915285518083528682019282019060005b818110156130c45784516001600160a01b03168352938301939183019160010161309f565b505084810360408601526130d88187612d14565b98975050505050505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015612efa57603f19888603018452613129858351612f3f565b9450928501929085019060010161310d565b600080600080600060a0868803121561315357600080fd5b85359450602086013567ffffffffffffffff8082111561317257600080fd5b61317e89838a01612dcf565b9550604088013591508082111561319457600080fd5b6131a089838a01612dcf565b945060608801359150808211156131b657600080fd5b506131c388828901612dcf565b95989497509295608001359392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610624576106246131d5565b8082028115828204841417610624576106246131d5565b600181811c9082168061322957607f821691505b60208210810361324957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610ba7576000816000526020600020601f850160051c810160208610156132785750805b601f850160051c820191505b8181101561329757828155600101613284565b505050505050565b815167ffffffffffffffff8111156132b9576132b9612db9565b6132cd816132c78454613215565b8461324f565b602080601f83116001811461330257600084156132ea5750858301515b600019600386901b1c1916600185901b178555613297565b600085815260208120601f198616915b8281101561333157888601518255948401946001909101908401613312565b508582101561334f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815461336c81613215565b80855260206001838116801561338957600181146133a3576133d1565b60ff1985168884015283151560051b8801830195506133d1565b866000528260002060005b858110156133c95781548a82018601529083019084016133ae565b890184019650505b505050505092915050565b8681526001600160a01b038681166020830152851660408201526060810184905260c0608082018190526000906134159083018561335f565b82810360a08401526134278185612b96565b9998505050505050505050565b80820180821115610624576106246131d5565b60006020828403121561345957600080fd5b81518015158114612b4c57600080fd5b6020808252601290820152711b9bdd081e5bdd5c881859dc99595b595b9d60721b604082015260600190565b60208082526017908201527f61677265656d656e74206973206e6f7420616374697665000000000000000000604082015260600190565b8681526001600160a01b038681166020830152851660408201526060810184905260c0608082018190526000906135059083018561335f565b82810360a0840152613427818561335f565b634e487b7160e01b600052603260045260246000fd5b60006001820161353f5761353f6131d5565b5060010190565b8581526001600160a01b038581166020830152841660408201526060810183905260c06080820181905260009061357f9083018461335f565b82810360a084015260008152602081019150509695505050505050565b85815260018060a01b038516602082015283604082015260a0606082015260006135c960a0830185612b96565b82810360808401526130d88185612b96565b8681526001600160a01b038681166020830152851660408201526060810184905260c06080820181905260009061350590830185612b9656fea264697066735822122031edfc690a555d195ac62096ff03f2d9f330fdf8d04038199f8f2e331355e8ea64736f6c63430008160033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
      },
      {
        "astId": 387,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 757,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "token",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IToken)1857"
      },
      {
        "astId": 805,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "agreementIdTotalCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 807,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "providerIdTotalCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 812,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "agreementIdToAgreement",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Agreement)786_storage)"
      },
      {
        "astId": 817,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "providerIdToProvider",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Provider)803_storage)"
      },
      {
        "astId": 822,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "addressToProvider",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(Provider)803_storage)"
      },
      {
        "astId": 827,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "userAgreements",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 832,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "providerAgreements",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 837,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "providerIdToAgreements",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 841,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "providerToTVLAcrossAllAgreements",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 845,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "providerIdToTVLAcrossAllAgreements",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 848,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "agreements",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 852,
        "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
        "label": "providers",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_struct(Provider)803_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Provider)803_storage)dyn_storage": {
        "base": "t_struct(Provider)803_storage",
        "encoding": "dynamic_array",
        "label": "struct DDMeshMarket.Provider[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IToken)1857": {
        "encoding": "inplace",
        "label": "contract IToken",
        "numberOfBytes": "20"
      },
      "t_enum(AgreementStatus)764": {
        "encoding": "inplace",
        "label": "enum DDMeshMarket.AgreementStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Provider)803_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DDMeshMarket.Provider)",
        "numberOfBytes": "32",
        "value": "t_struct(Provider)803_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)21_storage"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Agreement)786_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DDMeshMarket.Agreement)",
        "numberOfBytes": "32",
        "value": "t_struct(Agreement)786_storage"
      },
      "t_mapping(t_uint256,t_struct(Provider)803_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DDMeshMarket.Provider)",
        "numberOfBytes": "32",
        "value": "t_struct(Provider)803_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Agreement)786_storage": {
        "encoding": "inplace",
        "label": "struct DDMeshMarket.Agreement",
        "members": [
          {
            "astId": 766,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 768,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 770,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "userBalance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 772,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "providerAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 774,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "providerId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 776,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "providerClaimed",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 778,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "encConnectionString",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 780,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "startTimeStamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 782,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "providerRewardsWithdrawLastTimeStamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 785,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "status",
            "offset": 0,
            "slot": "9",
            "type": "t_enum(AgreementStatus)764"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Provider)803_storage": {
        "encoding": "inplace",
        "label": "struct DDMeshMarket.Provider",
        "members": [
          {
            "astId": 788,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 790,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "pAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 792,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "fee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 794,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "encApiKey",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 796,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "ensName",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 798,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "description",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 800,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "noOfDbAgreements",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 802,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "activeAgreements",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(RoleData)21_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20,
            "contract": "contracts/DDMeshMarket.sol:DDMeshMarket",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}